#include <ESP8266WiFi.h>        // Include the Wi-Fi library
#include <ESP8266HTTPClient.h>
#include <ArduinoJson.h>

const char* ssid     = "blabla";         // The SSID (name) of the Wi-Fi network you want to connect to
const char* password = "Elmebetegek Almaiban";     // The password of the Wi-Fi network

void setup() {
  Serial.begin(115200);         // Start the Serial communication to send messages to the computer
  delay(10);
  Serial.println('\n');

  WiFi.begin(ssid, password);             // Connect to the network
  Serial.print("Connecting to ");
  Serial.print(ssid); Serial.println(" ...");

  int i = 0;
  while (WiFi.status() != WL_CONNECTED) { // Wait for the Wi-Fi to connect
    delay(1000);
    Serial.print(++i); Serial.print(' ');
  }

  Serial.println('\n');
  Serial.println("Connection established!");  
  Serial.print("IP address:\t");
  Serial.println(WiFi.localIP());         // Send the IP address of the ESP8266 to the computer
}

void loop() { 

  long randNumber = random(0, 10);

  if (WiFi.status() == WL_CONNECTED) { //Check WiFi connection status

    HTTPClient http;

    char url[] = "http://jsonplaceholder.typicode.com/users/";
    char id[3];
    sprintf(id, "%d", randNumber);
    strcat(url, id);

    http.begin(url);  //Specify request destination
    int httpCode = http.GET();
 
    if (httpCode > 0) { //Check the returning code

      const size_t bufferSize = JSON_OBJECT_SIZE(2) + JSON_OBJECT_SIZE(3) + JSON_OBJECT_SIZE(5) + JSON_OBJECT_SIZE(8) + 370;
      DynamicJsonDocument root(bufferSize);
      deserializeJson(root, http.getString());

      // Parameters
      int id = root["id"]; 
      const char* name = root["name"];
      const char* username = root["username"];
      const char* email = root["email"];
 
      // Output to serial monitor
      Serial.println(url);
      Serial.print("Name:");
      Serial.print(name);
      Serial.print(", Username:");
      Serial.print(username);
      Serial.print(", Email:"); 
      Serial.print(email);
      Serial.println("");
    }

    http.end();   //Close connection

  }

  delay(30000);    //Send a request every 30 seconds  
}